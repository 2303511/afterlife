name: Frontend Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: client
        run: npm ci

      - name: Install testing dependencies
        working-directory: client
        run: npm install --save-dev msw identity-obj-proxy

      - name: Add Jest config and setup file
        working-directory: client
        run: |
          cat > jest.config.js << 'EOF'
          module.exports = {
            testEnvironment: 'jsdom',
            transformIgnorePatterns: [
              "node_modules/(?!(axios|msw|@mswjs|@bundled-es-modules)/)"
            ],
            moduleNameMapper: {
              '\\.(css|less|scss|sass)$': 'identity-obj-proxy'
            },
            setupFiles: ['<rootDir>/jest.setup.js']
          };
          EOF
          cat > jest.setup.js << 'EOF'
          const { TextEncoder, TextDecoder } = require('util');
          global.TextEncoder = TextEncoder;
          global.TextDecoder = TextDecoder;
          EOF

      - name: Run Jest unit tests
        working-directory: client
        run: npm test -- --ci --coverage --watchAll=false
